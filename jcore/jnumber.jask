/*
* File  : jcore/jnumber
* Author: Julius Paffrath
*
* Provides standard functions for number processing
*/

function MAX(n1:n2) if n1 greater n2 return n1 else return n2 endif end
function MIN(n1:n2) if n1 smaller n2 return n1 else return n2 endif end

function FIBONACCI(max)
	store 0 in first
	store 1 in second
	store 0 in next
	store 1 in i
	store list(0) in numbers

	assign max minus 1 to max

	run i to max with i plus 1
		if i smallerequal 1 assign i to c
		else assign first plus second to next assign second to first assign next to second
		endif
		listAdd(numbers:next)
	endrun

	return numbers
end

function POW(a:x)
	if x equals 0 return 1 else endif
	if x smaller 0 return NULL else endif

	store 1 in res
	store 0 in i

	run i to x with i plus 1
		assign res times a to res
	endrun

	return res
end

function ABS(x)
	store 0 in m
	assign x times -1 to m

	if x smaller 0
		return m
	else
		return x
	endif
end

function ROOT(x:n)
	if x smaller 0 return NULL else endif

	store n in m
	assign m minus 1 to m
	
	store x in xn
	assign xn divide 2 to xn
	store POW(xn:n) in p
	
	store 0 in xnext
	assign m times p to xnext
	assign xnext plus x to xnext

	store 0 in tmp
	assign POW(xn:m) to p
	assign n times p to tmp
	assign xnext divide tmp to xnext
	
	store 0.0000000001 in EPSILON
	store 0 in error
	store 0 in trash
	store 0 in i

	run i to 100 with i plus 1
		assign ABS(xnext) to error
		assign ABS(xn) to trash
		assign error minus trash to error
		assign ABS(error) to error

		if error smaller EPSILON return xnext else endif

		assign xnext to xn
		assign POW(xn:n) to p
		assign m times p to xnext
		assign xnext plus x to xnext
		assign POW(xn:m) to p
		assign n times p to tmp
		assign xnext divide tmp to xnext
	endrun

	return xnext
end

function SQRT(x)
	return ROOT(x:2)
end