/*
* This file executes several tests
*/

use jcore/jnumber
use jcore/jstring

store 0 in testPassed
store 0 in testFailed

printLine("Running jask tests...")

/*
**************************** Number storing tests ****************************
*/

store 42 in num1
if num1 equals 42 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

assign 26.119955 to num1
if num1 equals 26.119955 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

assign -10054 to num1
if num1 equals -10054 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

assign 0 to num1
increment num1
if num1 equals 1 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

decrement num1
if num1 equals 0 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** String storing tests ****************************
*/

store "42" in str1
if str1 equals "42" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** List tests ****************************
*/

if listSize(list()) equals 0 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

store list(1:2:3) in myList

if listSize(myList) equals 3 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listGet(myList:0) equals 1 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listAdd(myList:5) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listGet(myList:3) equals 5 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listSet(myList:3:4) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listGet(myList:3) equals 4 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listRemove(myList:3) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listSize(myList) equals 3 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

assign listFromString("my list") to myList
if listToString(myList) equals "my list" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

assign list(1:2:3) to myList

if listContains(myList:1) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listContains(myList:4) equals FALSE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

listAdd(myList:"a string")

if listContains(myList:"a string") equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listContains(myList:"A String") equals FALSE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** jcore jstring tests ****************************
*/

if substring("my substring string":3:11) equals "substring" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if upper("abcdefghijklmnopqrstuvwxyz") equals "ABCDEFGHIJKLMNOPQRSTUVWXYZ" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if lower("ABCDEFGHIJKLMNOPQRSTUVWXYZ") equals "abcdefghijklmnopqrstuvwxyz" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if listGet(split("a b c":" "):0) equals "a" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if listGet(split("Hello,World!":","):0) equals "Hello" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if reverse("12345") equals "54321" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if reverse(129) equals NULL assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if strsize("12345") equals 5 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if strsize(100) equals NULL assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if strrepeat("jask":2) equals "jaskjask" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if strrepeat("jask":0) equals NULL assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if trim("jask") equals "jask" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if trim(" jask") equals "jask" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if trim("jask ") equals "jask" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if trim(" jask ") equals "jask" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if trim("   jask   ") equals "jask" assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** jcore jnumber tests ****************************
*/

if max(2445.21:-7) equals 2445.21 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if min(-2445.21:7) equals -2445.21 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if PI() equals 3.141592653589793 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if E() equals 2.718281828459045 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if abs(3) equals 3 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if abs(-3) equals 3 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if pow(2:2) equals 4 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if pow(-2:2) equals 4 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if pow(5:2) equals 25 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if pow(-3:7) equals -2187 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if pow(2:-2) equals 0.25 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if pow(2:1.5) equals 2.8284271247461903 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if pow(1.5:2) equals 2.25 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if factorial(4) equals 24 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if factorial(6) equals 720 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if factorial(10) equals 3628800 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if factorial(-1) equals NULL assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if factorial(0) equals 1 assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if hasPlaces(100) equals FALSE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if hasPlaces(5.0) equals FALSE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if hasPlaces(-42) equals FALSE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

if hasPlaces(PI()) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if hasPlaces(5.01) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if hasPlaces(-14.45) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** Function tests ****************************
*/

store FALSE in testOutside

function testAccess()
	assign TRUE to !testOutside
end

testAccess()

if testOutside equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

function testModule()
	use jcore/jnumber
	return PI()
end

if testModule() equals PI() assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** Miscellaneous tests ****************************
*/

if isString("foo bar") equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if isNumber(100.32214) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if isBool(TRUE) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif
if isList(list("foo bar":-1953.22:FALSE)) equals TRUE assign testPassed plus 1 to testPassed else assign 1 plus testFailed to testFailed endif

/*
**************************** End tests ****************************
*/

printLine("Finish tests with ":testPassed:" passed and ":testFailed:" failed tests!")